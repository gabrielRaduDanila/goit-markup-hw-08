*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto', sans-serif;
  font-size: 14px;
  color: var(--text-color);
  letter-spacing: 0.03em;
  line-height: 1.14;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
}

.section {
  padding: 60px 15px;
}

.footer-padding {
  padding: 60px 15px;
}

%undecorate-text {
  text-decoration: none;
}

%unstyle-list {
  list-style-type: none;
}

a,
button,
input,
svg,
textarea {
  transition-property: color, background-color, border, fill, outline, box-shadow;
  transition-timing-function: var(--transition-timing);
  transition-duration: var(--transition-duration);
}

@mixin bordered($color) {
  border: 1px solid $color;
}

@mixin displayFlex($flexDorection) {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: $flexDorection;
}

@each $nrCol in 3,
4,
6 {
  .grid--col-#{$nrCol} {
    .grid__item {
      $nrGap: $nrCol - 1;
      $totalGap: $nrGap * 30;
      flex-basis: calc((100% - #{$totalGap}px) / #{$nrCol});
    }
  }
}

@mixin setWidth($nrItems) {
  $nrGap: $nrItems - 1;
  $totalGap: $nrGap * 30;
  flex-basis: calc((100% - #{$totalGap}px) / #{$nrItems});
}

@media screen and (min-width: 1200px) {
  .section {
    padding: 94px 215px;
  }
}
